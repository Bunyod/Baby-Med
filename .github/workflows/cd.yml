name: Pipeline

on:
  push:
    branches: [ "master" ]
jobs:
  test:
    name: Scalastyle and Test
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        scala: [ 2.13.10 ]
        java: [ temurin@11 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Scalafmt and Scalastyle tests
        run: sbt "all scalafmtSbtCheck; scalafmtCheckAll; Test / compile; scalafixAll --check"
      - name: "Testing üèù"
        run: sbt test

  build:
    name: BUILD
    needs: [ test ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
          - graalvm11-ce
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build base image üèó"
        run: |
          cd build/
          bash base-image

      - name: "Publish local üèó"
        run: |
          cd build/
          bash build

      - name: Publishing images ...
        run: |
          cd build/
          bash publish push -f babymed/services -t latest

  deploy:
    name: DEPLOY
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env, ./build/*"
          target: "babymed"

      - name: Install SSH key of timeweb
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -p ${{ secrets.DOCKER_PASSWORD }} -u ${{ secrets.DOCKER_USERNAME }}
            cd ~/babymed/build/
            chmod +x ./publish
            bash run
            doceker nginx restart