version: "3.9"

volumes:
  esdata:

services:
  fluentd:
    build: ./fluentd
    container_name: fluentd
    hostname: fluentd
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - external-net

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: "single-node"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
    networks:
      - external-net

  kibana:
    image: kibana:7.17.0
    hostname: kibana
    container_name: kibana
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - external-net

  nginx-server:
    depends_on:
      - fluentd
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - external-net
    ports:
      - "80:80"
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: 1s
        fluentd-max-retries: 30
        tag: fluent

  postgres:
    depends_on:
     - fluentd
    restart: always
    image: postgres:12
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - "./data:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - external-net
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: 1s
        fluentd-max-retries: 30
        tag: fluent

  redis:
    depends_on:
      - fluentd
    restart: always
    image: redis:6.2.6
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    environment:
      - DEBUG:false
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - external-net
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: 1s
        fluentd-max-retries: 30
        tag: fluent


networks:
  external-net:
    external:
      name: external-net
